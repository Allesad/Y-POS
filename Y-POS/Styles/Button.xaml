<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:ui="clr-namespace:YumaPos.WPF.UI;assembly=YumaPos.WPF.UI"
                    xmlns:ex="clr-namespace:YumaPos.WPF.UI.MarkupExtensions;assembly=YumaPos.WPF.UI">

    <ResourceDictionary.MergedDictionaries>
        <ui:SharedResourceDictionary Source="/Y-POS;component/Themes/ColorScheme.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style TargetType="ButtonBase">
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Background" Value="{StaticResource ButtonBackground}" />
        <Setter Property="Foreground" Value="{StaticResource ButtonText}"/>
        <Setter Property="BorderBrush" Value="{StaticResource ButtonBorder}" />
        <Setter Property="BorderThickness" Value="0,0,0,1" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Validation.ErrorTemplate" Value="{x:Null}" />
        <Setter Property="Padding" Value="10,3,10,5" />

        <Setter Property="ex:StyleExtensions.BgOnHover" Value="{StaticResource ButtonBackgroundHover}" />
        <Setter Property="ex:StyleExtensions.BgOnPressed" Value="{StaticResource ButtonBackgroundPressed}" />
        <Setter Property="ex:StyleExtensions.BorderBrushOnHover" Value="{StaticResource ButtonBorderHover}" />
        <Setter Property="ex:StyleExtensions.BorderBrushOnPressed" Value="{StaticResource ButtonBorderHover}" />
        <Setter Property="ex:StyleExtensions.ForegroundOnHover">
            <Setter.Value>
                <Binding RelativeSource="{RelativeSource Self}" Path="Foreground" />
            </Setter.Value>
        </Setter>
        <Setter Property="ex:StyleExtensions.ForegroundOnPressed">
            <Setter.Value>
                <Binding RelativeSource="{RelativeSource Self}" Path="Foreground" />
            </Setter.Value>
        </Setter>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Name="Chrome"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter Name="Presenter"
                                          Margin="{TemplateBinding Padding}"
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                          RecognizesAccessKey="True"
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource Self}, 
                                Path=(ex:StyleExtensions.BgOnHover)}" />
                            <Setter Property="Foreground"
                                    Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(ex:StyleExtensions.ForegroundOnHover)}" />
                            <Setter Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(ex:StyleExtensions.BorderBrushOnHover)}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background"
                                    Value="{Binding RelativeSource={RelativeSource Self}, 
                                Path=(ex:StyleExtensions.BgOnPressed)}" />
                            <Setter Property="Foreground"
                                    Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(ex:StyleExtensions.ForegroundOnPressed)}" />
                            <Setter Property="BorderBrush"
                                    Value="{Binding RelativeSource={RelativeSource Self},
                                Path=(ex:StyleExtensions.BorderBrushOnPressed)}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.6" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="Button" BasedOn="{StaticResource {x:Type ButtonBase}}"></Style>
    
    <Style x:Key="AccentButton" TargetType="Button" BasedOn="{StaticResource {x:Type ButtonBase}}">
        <Setter Property="Background" Value="{StaticResource AccentBrush}"/>
        <Setter Property="ex:StyleExtensions.BgOnHover" Value="{StaticResource AccentSecondaryBrush}"/>
        <Setter Property="ex:StyleExtensions.BgOnPressed" Value="{StaticResource AccentBrush}" />
    </Style>

</ResourceDictionary>