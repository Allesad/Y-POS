<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:p="clr-namespace:Y_POS.Core.Properties;assembly=Y-POS.Core"
                    xmlns:ex="clr-namespace:YumaPos.WPF.UI.MarkupExtensions;assembly=YumaPos.WPF.UI"
                    xmlns:ui="clr-namespace:YumaPos.WPF.UI;assembly=YumaPos.WPF.UI"
                    xmlns:controls="clr-namespace:Y_POS.Controls"
                    xmlns:converters="clr-namespace:Y_POS.Converters">

    <ResourceDictionary.MergedDictionaries>
        <ui:SharedResourceDictionary Source="/Y-POS;component/Themes/ColorScheme.xaml" />
        <ui:SharedResourceDictionary Source="/Y-POS;component/Styles/Button.xaml" />
        <ui:SharedResourceDictionary Source="/Y-POS;component/Styles/TextBlock.xaml" />
        <ui:SharedResourceDictionary Source="/Y-POS;component/Converters/Converters.xaml" />
        <ui:SharedResourceDictionary Source="/Y-POS;component/Icons/Icons.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <converters:ActionBarIconVisibilityConterter x:Key="ActionBarIconVisibilityConverter" />

    <Style x:Key="IconActionBar" TargetType="{x:Type Path}">
        <Setter Property="Width" Value="26" />
        <Setter Property="Height" Value="26" />
        <Setter Property="Fill" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Center" />
    </Style>

    <Style x:Key="ActionBarButtonText" TargetType="TextBlock" BasedOn="{StaticResource DefaultSmallText}">
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="TextAlignment" Value="Center" />
        <Setter Property="TextTrimming" Value="None" />
        <Setter Property="LineStackingStrategy" Value="BlockLineHeight" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="LineHeight" Value="14" />
    </Style>

    <!-- BASE ACTION BAR BUTTON -->
    <Style x:Key="ActionBarButton" TargetType="controls:ActionBarButton" BasedOn="{StaticResource {x:Type ButtonBase}}">
        <Setter Property="Height" Value="75" />
        <Setter Property="MaxWidth" Value="140"/>
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Padding" Value="15,5" />
        <Setter Property="ex:StyleExtensions.BgOnHover" Value="{StaticResource ActionBarButtonBgHover}" />
        <Setter Property="ex:StyleExtensions.BgOnPressed" Value="{StaticResource ActionBarButtonBgPressed}" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Vertical">
                        <Path Style="{StaticResource IconActionBar}"
                              Stretch="Uniform"
                              Data="{Binding RelativeSource={RelativeSource AncestorType=controls:ActionBarButton}, Path=IconPath}" />
                        <TextBlock HorizontalAlignment="Center"
                                   Margin="0,10,0,0"
                                   Text="{Binding RelativeSource={RelativeSource AncestorType=controls:ActionBarButton}, Path=Title}" 
                                   TextWrapping="NoWrap"
                                   TextTrimming="CharacterEllipsis"/>
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.3" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- MAIN ACTION BUTTON STYLE -->
    <Style x:Key="ActionBarMainActionButton" TargetType="controls:ActionBarButton"
           BasedOn="{StaticResource ActionBarButton}">
        <Setter Property="MaxWidth" Value="1000"/>
        <Setter Property="FontSize" Value="22" />
        <Setter Property="Padding" Value="20,5" />
        <Setter Property="Background" Value="{StaticResource AccentBrush}" />
        <Setter Property="Foreground" Value="{StaticResource TextBrush}" />
        <Setter Property="ex:StyleExtensions.BgOnHover" Value="{StaticResource AccentSecondaryBrush}" />
        <Setter Property="ex:StyleExtensions.BgOnPressed" Value="{StaticResource AccentBrush}" />
        <Setter Property="ContentTemplate">
            <Setter.Value>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <Path Style="{StaticResource IconActionBar}"
                              Fill="{StaticResource TextBrush}"
                              Margin="0,0,15,0"
                              Stretch="Uniform"
                              Data="{Binding RelativeSource={RelativeSource AncestorType=controls:ActionBarButton}, Path=IconPath}"
                              Visibility="{Binding RelativeSource={RelativeSource Self}, Path=Data, Converter={StaticResource ActionBarIconVisibilityConverter}}" />
                        <TextBlock HorizontalAlignment="Left"
                                   VerticalAlignment="Center"
                                   Text="{Binding RelativeSource={RelativeSource AncestorType=controls:ActionBarButton}, Path=Title}" />
                    </StackPanel>
                </DataTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource PrimaryColor}" Opacity="0.1" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource TextColor}" Opacity="0.8" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ActionBarNegativeActionButton" TargetType="controls:ActionBarButton"
           BasedOn="{StaticResource ActionBarMainActionButton}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource TextColor}" Opacity="0.8" />
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}" />
        <Setter Property="ex:StyleExtensions.BgOnHover">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource TextColor}" Opacity="0.4" />
            </Setter.Value>
        </Setter>
        <Setter Property="ex:StyleExtensions.BgOnPressed">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource TextColor}" Opacity="0.8" />
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="1" />
                <Setter Property="Background">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource TextColor}" Opacity="0.2" />
                    </Setter.Value>
                </Setter>
                <Setter Property="Foreground">
                    <Setter.Value>
                        <SolidColorBrush Color="{StaticResource PrimaryColor}" Opacity="0.3" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- MENU BUTTON STYLE -->
    <Style x:Key="ActionBarMenuButton" TargetType="controls:ActionBarButton" BasedOn="{StaticResource ActionBarButton}">
        <Setter Property="Padding" Value="25,5" />
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource TextColor}" Opacity="0.8" />
            </Setter.Value>
        </Setter>
        <Setter Property="ex:StyleExtensions.BgOnHover">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource TextColor}" Opacity="0.4" />
            </Setter.Value>
        </Setter>
        <Setter Property="Title"
                Value="{Binding Source={x:Static p:Resources.Menu}, 
            Converter={StaticResource UpperCaseCoverter}}" />
        <Setter Property="IconPath" Value="{StaticResource NavMenuIcon}" />
    </Style>

    <!-- BACK BUTTON STYLE -->
    <Style x:Key="ActionBarBackButton" TargetType="controls:ActionBarButton"
           BasedOn="{StaticResource ActionBarMenuButton}">
        <Setter Property="Title"
                Value="{Binding Source={x:Static p:Resources.Back}, 
            Converter={StaticResource UpperCaseCoverter}}" />
        <Setter Property="IconPath" Value="{StaticResource BackIcon}" />
    </Style>

    <!-- LOGIN BUTTON STYLE -->
    <Style x:Key="ActionBarLogin" TargetType="controls:ActionBarButton" BasedOn="{StaticResource ActionBarButton}">
        <Setter Property="Title"
                Value="{Binding Source={x:Static p:Resources.Action_Login}, Converter={StaticResource UpperCaseCoverter}}" />
        <Setter Property="IconPath" Value="{StaticResource LoginIcon}" />
    </Style>

    <!-- CLOCK IN BUTTON STYLE -->
    <Style x:Key="ActionBarClockIn" TargetType="controls:ActionBarButton" BasedOn="{StaticResource ActionBarButton}">
        <Setter Property="Title"
                Value="{Binding Source={x:Static p:Resources.Action_ClockIn}, Converter={StaticResource UpperCaseCoverter}}" />
        <Setter Property="IconPath" Value="{StaticResource ClockInIcon}" />
    </Style>

    <!-- CLOCK OUT BUTTON STYLE -->
    <Style x:Key="ActionBarClockOut" TargetType="controls:ActionBarButton" BasedOn="{StaticResource ActionBarButton}">
        <Setter Property="Title"
                Value="{Binding Source={x:Static p:Resources.Action_ClockOut}, Converter={StaticResource UpperCaseCoverter}}" />
        <Setter Property="IconPath" Value="{StaticResource ClockOutIcon}" />
    </Style>

    <!-- BREAK BUTTON STYLE -->
    <Style x:Key="ActionBarBreak" TargetType="controls:ActionBarButton" BasedOn="{StaticResource ActionBarButton}">
        <Setter Property="Title"
                Value="{Binding Source={x:Static p:Resources.Action_Break}, Converter={StaticResource UpperCaseCoverter}}" />
        <Setter Property="IconPath" Value="{StaticResource BreakIcon}" />
    </Style>

    <!-- CLEAR BUTTON STYLE -->
    <Style x:Key="ActionBarClear" TargetType="controls:ActionBarButton" BasedOn="{StaticResource ActionBarButton}">
        <Setter Property="Title"
                Value="{Binding Source={x:Static p:Resources.Clear}, Converter={StaticResource UpperCaseCoverter}}" />
        <Setter Property="IconPath" Value="{StaticResource DeleteIcon}" />
    </Style>

    <!-- VOID BUTTON STYLE -->
    <Style x:Key="ActionBarVoid" TargetType="controls:ActionBarButton" BasedOn="{StaticResource ActionBarButton}">
        <Setter Property="Title"
                Value="{Binding Source={x:Static p:Resources.Void}, Converter={StaticResource UpperCaseCoverter}}" />
        <Setter Property="IconPath" Value="{StaticResource ClearIcon}" />
    </Style>

    <!-- GIFT CARD BUTTON STYLE -->
    <Style x:Key="ActionBarGiftCard" TargetType="controls:ActionBarButton" BasedOn="{StaticResource ActionBarButton}">
        <Setter Property="Title"
                Value="{Binding Source={x:Static p:Resources.GiftCard}, Converter={StaticResource UpperCaseCoverter}}" />
        <Setter Property="IconPath" Value="{StaticResource GiftCardIcon}" />
    </Style>

    <!-- PRINT BUTTON STYLE -->
    <Style x:Key="ActionBarPrint" TargetType="controls:ActionBarButton" BasedOn="{StaticResource ActionBarButton}">
        <Setter Property="Title"
                Value="{Binding Source={x:Static p:Resources.Print}, Converter={StaticResource UpperCaseCoverter}}" />
        <Setter Property="IconPath"
                Value="{StaticResource PrintIcon}" />
    </Style>
    
    <!-- SEND BUTTON STYLE -->
    <Style x:Key="ActionBarSend" TargetType="controls:ActionBarButton" BasedOn="{StaticResource ActionBarButton}">
        <Setter Property="Title" Value="{Binding Source={x:Static p:Resources.Send}, Converter={StaticResource UpperCaseCoverter}}"/>
        <Setter Property="IconPath" Value="{StaticResource SendIcon}"/>
    </Style>

</ResourceDictionary>